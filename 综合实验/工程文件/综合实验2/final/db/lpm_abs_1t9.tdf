--lpm_abs CARRY_CHAIN="MANUAL" DEVICE_FAMILY="Stratix II" IGNORE_CARRY_BUFFERS="OFF" LPM_WIDTH=13 data result
--VERSION_BEGIN 9.0SP1 cbx_cycloneii 2008:05:19:10:57:37:SJ cbx_lpm_abs 2008:05:19:10:51:43:SJ cbx_lpm_add_sub 2008:12:09:22:11:50:SJ cbx_mgl 2009:02:26:16:06:21:SJ cbx_stratix 2008:09:18:16:08:35:SJ cbx_stratixii 2008:11:14:16:08:42:SJ cbx_util_mgl 2008:11:21:14:58:47:SJ  VERSION_END


-- Copyright (C) 1991-2009 Altera Corporation
--  Your use of Altera Corporation's design tools, logic functions 
--  and other software and tools, and its AMPP partner logic 
--  functions, and any output files from any of the foregoing 
--  (including device programming or simulation files), and any 
--  associated documentation or information are expressly subject 
--  to the terms and conditions of the Altera Program License 
--  Subscription Agreement, Altera MegaCore Function License 
--  Agreement, or other applicable license agreement, including, 
--  without limitation, that your use is for the sole purpose of 
--  programming logic devices manufactured by Altera and sold by 
--  Altera or its authorized distributors.  Please refer to the 
--  applicable agreement for further details.



--synthesis_resources = lut 13 
SUBDESIGN lpm_abs_1t9
( 
	data[12..0]	:	input;
	overflow	:	output;
	result[12..0]	:	output;
) 
VARIABLE
	adder_result_int[13..0]	:	WIRE;
	adder_cin	:	WIRE;
	adder_dataa[12..0]	:	WIRE;
	adder_datab[12..0]	:	WIRE;
	adder_result[12..0]	:	WIRE;
	gnd_wire	: WIRE;
	result_tmp[12..0]	: WIRE;

BEGIN 
	adder_result_int[] = (adder_dataa[], adder_cin) + (adder_datab[], adder_cin);
	adder_result[] = adder_result_int[13..1];
	adder_cin = data[12..12];
	adder_dataa[] = (data[] $ data[12..12]);
	adder_datab[] = ( gnd_wire, gnd_wire, gnd_wire, gnd_wire, gnd_wire, gnd_wire, gnd_wire, gnd_wire, gnd_wire, gnd_wire, gnd_wire, gnd_wire, gnd_wire);
	gnd_wire = B"0";
	overflow = (result_tmp[12..12] & data[12..12]);
	result[] = result_tmp[];
	result_tmp[] = adder_result[];
END;
--VALID FILE
